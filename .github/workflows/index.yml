name: "Generating index"
#
# Generates index
#

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

env:
   GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  
  jobsend:

    name: "Create index"
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'Armbian' }}
    steps:

      - name: Runner prepare
        uses: armbian/actions/runner-prepare@main
        
      - uses: igorjs/gh-actions-clean-workflow@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          days_old: 14

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          repository: armbian/build
          ref: nightly
          path: build
          clean: false

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          repository: armbian/community
          path: community
          clean: false

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_KEY2 }}
          passphrase: ${{ secrets.GPG_PASSPHRASE2 }}
          workdir: community
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Make build list
        run: |
        
          sudo npm install --location=global json || true
          #truncate README.tmp --size=0 || true
          #truncate unsupported.tmp --size=0 || true
          #truncate unsupported.html --size=0 || true
          VERSION=$(date +%Y%U)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          #cat "community/.github/Releases.md" >> README.tmp
          cat community/.github/header.inc > community/README.md
          echo -en "&nbsp;\n\n" >> community/README.md
          cat community/.github/memo.inc >> community/README.md
          echo -en "&nbsp;\n\n" >> community/README.md
          echo "| Image &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | GPG | SHA | Release | Branch | Variant | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Size | Kernel |" community/README.md
          echo "| --- | :--: | :--: | --: | --: | --: | --: | --: |" >> community/README.md
          cd community
          gh release view --json assets 2>/dev/null | python3 -mjson.tool | sed  '1,2d;$d' | json -ga name url size -d, | sort | (
          while read -r line; do
           name=$(echo $line | cut -d"," -f1 | awk '{print tolower($0)}')
           url=$(echo $line | cut -d"," -f2)
           size=$(echo $line | cut -d"," -f3)
           if [ "${name: -3}" == ".xz" ]; then
             board_name=$(echo $name | cut -d"_" -f3)
             source ../build/config/boards/$board_name.*
             out_release=$(echo $name | cut -d"_" -f4)
             out_branch=$(echo $name | cut -d"_" -f5)
             out_kernel=$(echo $name | cut -d"_" -f6-7 | cut -d"." -f1-3 | cut -d"_" -f1)
             out_desktop=$(echo $name | cut -d"_" -f7)
             out_desktop=${out_desktop:-cli}
             out_size=$(echo "scale=0; $size/1024/1024" | bc -l)" Mb"
             echo -ne "| [$BOARD_NAME]($url#$board_name) | [:file_folder:]($url".asc") | [:file_folder:]($url".sha") | $out_release | $out_branch | $out_desktop | $out_size | $out_kernel |\n" >> README.md
             #echo "$BOARD_NAME" >> unsupported.tmp
           fi
          done
          )
          echo -en "&nbsp;\n\n" >> README.md
          #
          #URL="https://github.com/armbian/community/releases/tag/$VERSION"
          #cat unsupported.tmp | sort | uniq | sed 's|^|<a href='$URL'>|' | sed -e 's|$|</a>|g' | sed -z 's/\n/ | /g' | sed 's/.$//' | sed 's/.$//'
          #cd ..
          #cat README.tmp
        
          # header and footer are edited at GitHub          
          #cat community/.github/header.inc > community/README.md
          #echo -en "&nbsp;\n\n" >> README.tmp
          #cat community/.github/memo.inc >> community/README.md
          #echo -en "\n\n" >> community/README.md
          #cat README.tmp >> community/README.md          
        
      #- uses: ncipollo/release-action@v1
       # with:
        #  tag: "${{ env.VERSION }}"
         # bodyFile: "README.tmp"
         # name: "Community ${{ env.VERSION }}"
         # allowUpdates: true
         # token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update scripts
        run: |
          cd community
          sudo chown -R $USER:$USER .git
          if git status --porcelain | grep .; then
             git config --global user.email "info@armbian.com"
             git config --global user.name "Armbianworker"
             git config pull.rebase false
             git pull
             git add .
             git commit --allow-empty -m "Update index"
             git push
          fi
